<h1>{{title}}</h1>
<div>
  <h2>Plant ID: {{plant.id}}</h2>
</div>
<form id="create" action="/api/update/{{plant.id}}" method="POST">

  <div class="col">
    <div>
      <label for="plant_name">Plant Name</label>
      <input type="text" id="plant_name" name="plant_name" value="{{plant.name}}">
    </div>

    <div>
      <label for="scientific_name">Scientific Name</label>
      <input type="text" id="scientific_name" name="scientific_name" value="{{plant.scientific_name}}">
    </div>

    <div>
      <label for="description">Description</label>
      <textarea type="text" id="description" name="description" cols="60" rows="10">{{plant.description}}</textarea>
    </div>

    <div>
      <label for="price">Price</label>
      <input type="text" id="price" name="price" value="{{plant.price}}">
    </div>

    <div>
      <label for="family">Family</label>
      <input type="text" id="family" name="family" value="{{plant.family}}">
    </div>

    <div>
      <label for="image_url">Genus</label>
      <input type="text" id="genus" name="genus" value="{{plant.genus}}">
    </div>
  </div>
  <div class="col">

    <div>
      <label for="categories">Categories</label>
      <input type="text" id="categories" name="categories" value="{{array_to_comma_string plant.categories }}"
        data-tag-picker placeholder="Category 1, Category 2">
    </div>

    <div>
      <label for="care">Care Instructions</label>
      <textarea name="care" id="care" cols="60" rows="10">{{array_to_new_line_string plant.care}}</textarea>
    </div>

    <div>
      <label for="image_url">Image URL</label>
      <input type="text" id="image_url" name="image_url" value="{{plant.image.url}}">
    </div>

    <div>
      <label for="image_alt">Image Alt</label>
      <input type="text" id="image_alt" name="image_alt" value="{{plant.image.alt}}">
    </div>

    <input type="submit" value="submit">
    <span class="submit-status"></span>
  </div>

</form>
<script src="https://polyfill.io/v3/polyfill.min.js?features=Object.fromEntries"></script>
<script src="/js/tag-picker/index.min.js"></script>
<script>
  const pickers = document.querySelectorAll('[data-tag-picker]')
  Array.from(pickers).forEach(p => new TP(p))
</script>
<script>
  const formElem = document.getElementById('create')
  const submitStatus = formElem.querySelector('.submit-status')

  const handleSubmit = e => {
    e.preventDefault()

    const form = e.currentTarget
    const url = form.action
    const data = new FormData(form)
    // https://simonplend.com/how-to-use-fetch-to-post-form-data-as-json-to-your-api/
    const plainFormData = Object.fromEntries(data.entries());
    const formDataJsonString = JSON.stringify(plainFormData);
    submitStatus.classList.add("sending")
    submitStatus.textContent = "Sending..."

    fetch(url, {
      method: 'PATCH',
      body: formDataJsonString,
      headers: {
        'Content-Type': 'application/json',
        Accept: "application/json"
      },
    })
      .then(res => res.json())
      .then(json => {
        console.log("res:", json)
        submitStatus.classList.add("success")
        submitStatus.textContent = "Success!"
      })
      .catch(err => {
        console.log(err)
        submitStatus.textContent = "Error: " + err
        submitStatus.classList.add("error")
      })
      .finally(() => {
        submitStatus.classList.remove("sending")

        submitStatus.addEventListener('animationend', () => {
          submitStatus.classList.remove("animate__animated", "animate__fadeOut", "success")
          submitStatus.textContent = ""
        })

        submitStatus.classList.add("animate__animated", "animate__fadeOut")
      })

  }

  formElem.addEventListener("submit", handleSubmit)
</script>